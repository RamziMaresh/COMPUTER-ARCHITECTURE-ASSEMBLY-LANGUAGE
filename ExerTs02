a.	Prompt a welcoming message to the user (“Welcome to the letter game”) 
b.	Prompt a message to the user to enter a word. The word must be of exactly 6 only. Upercase & loercase	
c.	Manipulate the word by changing the 6 characters to the opposite 	 							
d.	Prompt the user with the manipulated word. 
e.	Optimise the code to use procedures whenever possible (at least 1 procedure). 
f.	Make sure you use proper label names and include relevant and appropriate comments. 	



.data
   welcomeMsg:.asciiz " Welcome to the letter game  : \n"
   inputMsg:.asciiz " Enter a word of 6 letters that contains both uppercase and lowercase letters (eg: THiaNa) :\n "
   word: .space 7
   manipulatedWord: .space 7
   newLine: .asciiz "\n"
   
.text
   #print string
   li $v0, 4
   la $a0, welcomeMsg
   syscall
   
   #print string
   li $v0, 4
   la $a0, inputMsg
   syscall
  
   #read string
   la $a0, word
   li $a1, 7
   li $v0, 8
   syscall
  
   la $t0, word
   la $t1, manipulatedWord
while:
   lb $t2, ($t0)
   beq $t2, '\0', endwhile
  
   blt $t2, 'A', nochange
   ble $t2, 'Z', uppercase
   blt $t2, 'a', nochange
   ble $t2, 'z', lowercase
   b nochange

nochange:
   sb $t2, ($t1)
   b next

uppercase:
   sub $t2, $t2, 'A'
   add $t2, $t2, 'a'
   sb $t2, ($t1)
   b next
  
lowercase:
   sub $t2, $t2, 'a'
   add $t2, $t2, 'A'
   sb $t2, ($t1)
   b next

next:
   add $t0, $t0, 1
   add $t1, $t1, 1
   b while

endwhile:
   sb $t2, ($t1) #store null terminator
  
   #print string
   li $v0, 4
   la $a0, newLine
   syscall
   
   #print string
   li $v0, 4
   la $a0, manipulatedWord
   syscall
  
   #exit
   li $v0, 10
   syscall
